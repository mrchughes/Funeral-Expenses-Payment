name: Terraform Deploy
on:
  push:
    paths:
      - "terraform/**"
  workflow_dispatch:
jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        env:
          VPC_ID: ${{ secrets.VPC_ID }}
          PUBLIC_SUBNET_IDS: ${{ secrets.PUBLIC_SUBNET_IDS }}
          ALB_DNS_NAME: ${{ secrets.ALB_DNS_NAME }}
          ECR_REPO_APP2: ${{ secrets.ECR_REPO_APP2 }}
          ECS_TASK_EXECUTION_ROLE_ARN: ${{ secrets.ECS_TASK_EXECUTION_ROLE_ARN }}
          APP2_TG_ARN: ${{ secrets.APP2_TG_ARN }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          DYNAMODB_TABLE_NAME: ${{ secrets.DYNAMODB_TABLE_NAME }}
        run: |
          terraform apply -auto-approve \
            -var="vpc_id=$VPC_ID" \
            -var="public_subnet_ids=[${PUBLIC_SUBNET_IDS}]" \
            -var="alb_dns_name=$ALB_DNS_NAME" \
            -var="ecr_repo_app2=$ECR_REPO_APP2" \
            -var="ecs_task_execution_role_arn=$ECS_TASK_EXECUTION_ROLE_ARN" \
            -var="app2_tg_arn=$APP2_TG_ARN" \
            -var="s3_bucket_name=$S3_BUCKET_NAME" \
            -var="dynamodb_table_name=$DYNAMODB_TABLE_NAME"
