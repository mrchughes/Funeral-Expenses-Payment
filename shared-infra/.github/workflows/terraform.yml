name: "Terraform Deploy and Sync Outputs"
on:
  push:
    paths:
      - "terraform/**"
  workflow_dispatch:
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
  GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply -auto-approve -var="domain_name=${{ env.DOMAIN_NAME }}"
      - name: Export Terraform Outputs to JSON
        id: tfout
        run: terraform output -json > ../outputs.json
      - name: Set Outputs as GitHub Secrets (mern-app)
        run: |
          jq -r 'to_entries[] | "gh secret set \(.key | ascii_upcase) --body \"\(.value.value)\" --repo mrchughes/mern-app"' ../outputs.json | bash
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
      - name: Set Outputs as GitHub Secrets (python-app)
        run: |
          jq -r 'to_entries[] | "gh secret set \(.key | ascii_upcase) --body \"\(.value.value)\" --repo mrchughes/python-app"' ../outputs.json | bash
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
